{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matias/projects/web/full-stack-open/osa_2/puhelinluettelo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\nimport \".\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [addedMessage, setAddedMessage] = useState(\"\");\n  useEffect(() => {\n    personService.getAll().then(returnedPersons => {\n      setPersons(returnedPersons);\n    });\n  }, []);\n\n  const addName = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: number\n    };\n    const alreadyOnList = persons.find(o => o.name === newName);\n\n    if (alreadyOnList === undefined) {\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n      });\n      setPersons(persons.concat(personObject));\n      setAddedMessage(`${personObject.name} was added to numbers`);\n      setTimeout(() => {\n        setAddedMessage(null);\n      }, 2000);\n      setNewName(\"\");\n      setNumber(\"\");\n    } else {\n      if (window.confirm(`${personObject.name} is already on the list, replace the old number with a new one?`)) {\n        updatePerson(alreadyOnList.id, personObject);\n      }\n    }\n  };\n\n  const handlePersonChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  const handleFilter = event => {\n    setPersons(filterPersons(persons, event.target.value));\n  };\n\n  const filterPersons = (persons, f) => {\n    return persons.filter(person => person.name.includes(f));\n  };\n\n  const deletePerson = person => {\n    if (window.confirm(`delete ${person.name}?`)) {\n      personService.remove(person.id).then(() => {\n        personService.getAll().then(returnedPersons => {\n          setPersons(returnedPersons);\n        });\n      });\n    }\n\n    return;\n  };\n\n  const updatePerson = (id, person) => {\n    console.log(person);\n    personService.update(id, person).then(returnedPerson => {\n      setPersons(persons.map(person => person.id !== id ? person : returnedPerson));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n          name: newName,\n          number: number,\n          personChange: handlePersonChange,\n          numberChange: handleNumberChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: addedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Person, {\n      persons: persons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"cWhXGH5F83Jui5JfSfPiG9gLfUs=\");\n\n_c = App;\n\nconst Notification = ({\n  message\n}) => {\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"success\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Notification;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Notification\");","map":{"version":3,"sources":["/home/matias/projects/web/full-stack-open/osa_2/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","Filter","Person","PersonForm","personService","App","persons","setPersons","newName","setNewName","number","setNumber","addedMessage","setAddedMessage","getAll","then","returnedPersons","addName","event","preventDefault","personObject","name","alreadyOnList","find","o","undefined","create","returnedPerson","concat","setTimeout","window","confirm","updatePerson","id","handlePersonChange","target","value","handleNumberChange","handleFilter","filterPersons","f","filter","person","includes","deletePerson","remove","console","log","update","map","Notification","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\nimport \".\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const [addedMessage, setAddedMessage] = useState(\"\");\n\n    useEffect(() => {\n        personService.getAll().then((returnedPersons) => {\n            setPersons(returnedPersons);\n        });\n    }, []);\n\n    const addName = (event) => {\n        event.preventDefault();\n        const personObject = {\n            name: newName,\n            number: number,\n        };\n\n        const alreadyOnList = persons.find((o) => o.name === newName);\n\n        if (alreadyOnList === undefined) {\n            personService.create(personObject).then((returnedPerson) => {\n                setPersons(persons.concat(returnedPerson));\n            });\n            setPersons(persons.concat(personObject));\n            setAddedMessage(`${personObject.name} was added to numbers`);\n            setTimeout(() => {\n                setAddedMessage(null);\n            }, 2000);\n            setNewName(\"\");\n            setNumber(\"\");\n        } else {\n            if (\n                window.confirm(\n                    `${personObject.name} is already on the list, replace the old number with a new one?`\n                )\n            ) {\n                updatePerson(alreadyOnList.id, personObject);\n            }\n        }\n    };\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumberChange = (event) => {\n        setNumber(event.target.value);\n    };\n\n    const handleFilter = (event) => {\n        setPersons(filterPersons(persons, event.target.value));\n    };\n\n    const filterPersons = (persons, f) => {\n        return persons.filter((person) => person.name.includes(f));\n    };\n\n    const deletePerson = (person) => {\n        if (window.confirm(`delete ${person.name}?`)) {\n            personService.remove(person.id).then(() => {\n                personService.getAll().then((returnedPersons) => {\n                    setPersons(returnedPersons);\n                });\n            });\n        }\n        return;\n    };\n\n    const updatePerson = (id, person) => {\n        console.log(person);\n        personService.update(id, person).then((returnedPerson) => {\n            setPersons(\n                persons.map((person) =>\n                    person.id !== id ? person : returnedPerson\n                )\n            );\n        });\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <h2>Search</h2>\n            <Filter onChange={handleFilter} />\n            <form onSubmit={addName}>\n                <div>\n                    <h2>Add a new</h2>\n                    <PersonForm\n                        name={newName}\n                        number={number}\n                        personChange={handlePersonChange}\n                        numberChange={handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <Notification message={addedMessage} />\n            <h2>Numbers</h2>\n            <Person persons={persons} deletePerson={deletePerson} />\n        </div>\n    );\n};\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return <div className=\"success\">{message}</div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}