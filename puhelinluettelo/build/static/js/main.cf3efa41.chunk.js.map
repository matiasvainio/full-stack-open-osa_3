{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","props","handleFilter","onChange","Person","persons","deletePerson","map","person","i","name","number","onClick","PersonForm","personChange","numberChange","value","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","App","useState","setPersons","newName","setNewName","setNumber","addedMessage","setAddedMessage","useEffect","personService","returnedPersons","filterPersons","f","filter","includes","updatePerson","console","log","returnedPerson","event","target","onSubmit","preventDefault","personObject","alreadyOnList","find","o","undefined","concat","setTimeout","window","confirm","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf3efa41.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => {\n    const handleFilter = props.onChange;\n    return (\n        <div>\n            filter shown with:\n            <input onChange={handleFilter} />\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Person = (props) => {\n    const persons = props.persons;\n    const deletePerson = props.deletePerson;\n    return (\n        <ul>\n            {persons.map((person, i) => {\n                return (\n                    <li key={i}>\n                        {person.name} {person.number}{\" \"}\n                        <button onClick={() => deletePerson(person)}>\n                            delete\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default Person;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n    const { name, number, personChange, numberChange } = props;\n    return (\n        <div>\n            <div>\n                name:\n                <input value={name} onChange={personChange} />\n            </div>\n            <div>\n                number:\n                <input value={number} onChange={numberChange} />\n            </div>\n        </div>\n    );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then((response) => response.data);\n};\n\nexport default { getAll, create, remove, update };\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Person from \"./components/Person\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\nimport \"./app.css\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const [addedMessage, setAddedMessage] = useState(null);\n\n    useEffect(() => {\n        personService.getAll().then((returnedPersons) => {\n            setPersons(returnedPersons);\n        });\n    }, []);\n\n    const addName = (event) => {\n        event.preventDefault();\n        const personObject = {\n            name: newName,\n            number: number,\n        };\n\n        const alreadyOnList = persons.find((o) => o.name === newName);\n\n        if (alreadyOnList === undefined) {\n            personService.create(personObject).then((returnedPerson) => {\n                setPersons(persons.concat(returnedPerson));\n            });\n            setPersons(persons.concat(personObject));\n            setAddedMessage(`${personObject.name} was added to numbers`);\n            setTimeout(() => {\n                setAddedMessage(null);\n            }, 2000);\n            setNewName(\"\");\n            setNumber(\"\");\n        } else {\n            if (\n                window.confirm(\n                    `${personObject.name} is already on the list, replace the old number with a new one?`\n                )\n            ) {\n                updatePerson(alreadyOnList.id, personObject);\n            }\n        }\n    };\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumberChange = (event) => {\n        setNumber(event.target.value);\n    };\n\n    const handleFilter = (event) => {\n        setPersons(filterPersons(persons, event.target.value));\n    };\n\n    const filterPersons = (persons, f) => {\n        return persons.filter((person) => person.name.includes(f));\n    };\n\n    const deletePerson = (person) => {\n        if (window.confirm(`delete ${person.name}?`)) {\n            personService.remove(person.id).then(() => {\n                personService.getAll().then((returnedPersons) => {\n                    setPersons(returnedPersons);\n                });\n            });\n        }\n        return;\n    };\n\n    const updatePerson = (id, person) => {\n        console.log(person);\n        personService.update(id, person).then((returnedPerson) => {\n            setPersons(\n                persons.map((person) =>\n                    person.id !== id ? person : returnedPerson\n                )\n            );\n        });\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <h2>Search</h2>\n            <Filter onChange={handleFilter} />\n            <form onSubmit={addName}>\n                <div>\n                    <h2>Add a new</h2>\n                    <PersonForm\n                        name={newName}\n                        number={number}\n                        personChange={handlePersonChange}\n                        numberChange={handleNumberChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <Notification message={addedMessage} />\n            <h2>Numbers</h2>\n            <Person persons={persons} deletePerson={deletePerson} />\n        </div>\n    );\n};\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return <div className=\"success\">{message}</div>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}